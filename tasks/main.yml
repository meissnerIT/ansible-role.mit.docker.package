---
# # Variables
#
# compose
# https://docs.docker.com/compose/migrate/
#
# `docker-compose` has been replaced by Compose v2 via `docker compose`
#
# * v1 installations: docker_compose_packages=docker-compose-plugin
# * v1 compatible: docker_compose_packages=docker-compose,docker-compose-plugin
# * v1 deprecated: docker_compose_version=1.29.2

# https://docs.docker.com/config/daemon/systemd/
# https://www.freedesktop.org/software/systemd/man/systemd.unit.html#Unit%20File%20Load%20Path

# Deployment [MIT-20411]
# https://docs.docker.com/engine/install/debian/

# https://stackoverflow.com/questions/36451793/how-do-i-exit-ansible-play-without-error-on-a-condition
- name: Check docker_install_only_on_weekday
  when: docker_install_only_on_weekday is defined and docker_install_only_on_weekday != ansible_date_time.weekday
  block:
    - name: "Only install / upgrade on {{ docker_install_only_on_weekday }}"
      ansible.builtin.debug:
        msg: "docker_install_only_on_weekday={{ docker_install_only_on_weekday }} is set for {{ inventory_hostname }}"
    - name: End the play
      ansible.builtin.meta: end_host

- name: Set defaults
  ansible.builtin.set_fact:
    apt_keyrings: /etc/apt/keyrings
    # used for filenames
    visible_name: docker
- name: Set defaults
  ansible.builtin.set_fact:
    local_apt_key: "{{ apt_keyrings }}/{{ visible_name }}.gpg"
- name: Set defaults
  ansible.builtin.set_fact:
    apt_package: docker-ce,docker-ce-cli,containerd.io
    apt_source_list_name: local-download.docker.com.list
    apt_repository: deb [arch=amd64 signed-by={{ local_apt_key }}]
      https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable
    gpg_key_src: https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg

- name: Remove /usr/share/keyrings/docker.gpg
  ansible.builtin.file:
    path: /usr/share/keyrings/docker.gpg
    state: absent

- name: Install docker package
  ansible.builtin.include_tasks: install.yml

# https://docs.docker.com/config/daemon/systemd/#httphttps-proxy
# group_vars/proxy_required
- name: Set docker http proxy environment variables
  ansible.builtin.template:
    src: "http-proxy.conf"
    dest: /etc/systemd/system/docker.service.d/
    mode: "644"
  when: proxy_env is defined
  notify:
    - Reload systemd
    - Restart docker

- name: Set docker mtu
  # https://github.com/ParticleDecay/ansible-jsonpatch
  json_patch:
    src: /etc/docker/daemon.json
    operations:
      - op: add
        path: /mtu
        value: 1200
    pretty: true
    create: true
  when: docker_mtu is defined
  notify: Restart docker

- name: Install docker compose (manually)
  ansible.builtin.include_tasks: docker-compose-manually.yml
  when: docker_compose_version is defined
